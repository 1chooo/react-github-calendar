{"version":3,"sources":["../webpack/universalModuleDefinition","lib/utils/constants.js","lib/services/contributions.js","lib/components/GitHubCalendar.js","lib/utils/index.js","demo/CodeBlock.js","demo/ForkMe.js","demo/Demo.js","demo/index.js"],"names":["root","factory","exports","module","define","amd","a","i","window","DEFAULT_THEME","background","text","grade4","grade3","grade2","grade1","grade0","API_URL","DATE_FORMAT","getContributionsForDate","data","date","contributions","find","contrib","getGraphDataForYear","year","fullYear","blocks","now","Date","firstDate","subYears","parse","lastDate","weekStart","getDay","addDays","firstRowDates","format","push","info","setDay","map","dateObj","dates","isAfter","getBlocksForYear","monthLabels","previousMonth","length","slice","reduce","acc","week","x","month","getMonth","label","getMonthLabels","totalCount","begin","findIndex","end","count","getContributionCountForLastYear","yearEntry","years","entry","String","total","getContributionCountForYear","options","username","fetch","json","Error","isCurrentYear","isSameYear","GitHubCalendar","state","graphs","error","this","props","getGitHubGraphData","then","setState","catch","color","theme","baseColor","textColor","emptyCellColor","darken","toHslString","base","isValid","setAlpha","createCalendarTheme","Object","assign","fontSize","anchor","chart","marginBottom","calendar","maxWidth","height","backgroundColor","overflow","meta","title","paddingBottom","borderBottom","getTheme","Math","round","object","blockMargin","blockSize","width","day","dateFormat","className","getClassNameFor","style","getStyles","href","shift","y","key","fill","textHeight","intensity","data-tip","getTooltipMessage","transform","getYear","children","styles","getDimensions","renderTitle","graph","xmlns","viewBox","textRendering","renderMonthLabels","renderBlocks","renderMeta","Component","defaultProps","tooltips","Number","CodeBlock","svgStyle","position","top","right","border","ForkMe","aria-label","aria-hidden","d","transformOrigin","Demo","marginTop","overflowX","id","delayShow","html","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0553e8eb.chunk.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn ","// GitHub theme\nexport const DEFAULT_THEME = {\n  background: 'transparent',\n  text: '#000',\n  grade4: '#196127',\n  grade3: '#239a3b',\n  grade2: '#7bc96f',\n  grade1: '#c6e48b',\n  grade0: '#ebedf0',\n};\n\nexport const NAMESPACE = 'react-github-calendar';\n\nexport const LINE_HEIGHT = 1.5;\nexport const MIN_DISTANCE_MONTH_LABELS = 2;\nexport const TITLE_SCALE_FACTOR = 1.25;\n","// Import modules separately to reduce bundle size\nimport addDays from 'date-fns/add_days';\nimport format from 'date-fns/format';\nimport getDay from 'date-fns/get_day';\nimport getMonth from 'date-fns/get_month';\nimport isAfter from 'date-fns/is_after';\nimport isSameYear from 'date-fns/is_same_year';\nimport parse from 'date-fns/parse';\nimport setDay from 'date-fns/set_day';\nimport subYears from 'date-fns/sub_years';\n\nconst API_URL = 'https://grubersjoe-github-contributions-api.now.sh/v1/';\nconst DATE_FORMAT = 'YYYY-MM-DD';\n\nfunction getContributionsForDate(data, date) {\n  return data.contributions.find(contrib => contrib.date === date);\n}\n\nfunction getContributionCountForLastYear(data) {\n  const { contributions } = data;\n  const now = new Date();\n\n  // Start date for accumulating the values\n  const begin = contributions.findIndex(contrib => contrib.date === format(now, DATE_FORMAT));\n\n  // No data for today given\n  if (begin === -1) {\n    return 0;\n  }\n\n  // Check if there is data for the day one year past\n  let end = contributions.findIndex(contrib => {\n    return contrib.date === format(subYears(now, 1), DATE_FORMAT);\n  });\n\n  // Take the oldest contribution otherwise, if not enough data exists\n  if (end === -1) {\n    end = contributions.length - 1;\n  }\n\n  return contributions.slice(begin, end).reduce((acc, contrib) => acc + contrib.count, 0);\n}\n\nfunction getContributionCountForYear(data, year) {\n  const yearEntry = data.years.find(entry => entry.year === String(year));\n\n  return yearEntry ? yearEntry.total : 0;\n}\n\nfunction getBlocksForYear(year, data, fullYear) {\n  const now = new Date();\n  const firstDate = fullYear ? subYears(now, 1) : parse(`${year}-01-01`);\n  const lastDate = fullYear ? now : parse(`${year}-12-31`);\n\n  let weekStart = firstDate;\n\n  // The week starts on Sunday - add days to get to next sunday if neccessary\n  if (getDay(firstDate) !== 0) {\n    weekStart = addDays(firstDate, getDay(firstDate));\n  }\n\n  // Fetch graph data for first row (Sundays)\n  const firstRowDates = [];\n  while (weekStart <= lastDate) {\n    const date = format(weekStart, DATE_FORMAT);\n\n    firstRowDates.push({\n      date,\n      info: getContributionsForDate(data, date),\n    });\n\n    weekStart = setDay(weekStart, 7);\n  }\n\n  // Add the remainig days per week (column for column)\n  return firstRowDates.map(dateObj => {\n    const dates = [];\n    for (let i = 0; i <= 6; i += 1) {\n      const date = format(setDay(dateObj.date, i), DATE_FORMAT);\n\n      if (isAfter(date, lastDate)) {\n        break;\n      }\n\n      dates.push({\n        date,\n        info: getContributionsForDate(data, date),\n      });\n    }\n\n    return dates;\n  });\n}\n\nfunction getMonthLabels(blocks, fullYear) {\n  let previousMonth = 0; // January\n  const { length } = blocks;\n\n  return blocks.slice(0, fullYear ? length - 1 : length).reduce((acc, week, x) => {\n    const date = parse(week[0].date);\n    const month = getMonth(date) + 1;\n    const monthChanged = month !== previousMonth;\n    const firstMonthIsDec = x === 0 && month === 12;\n\n    if (monthChanged && !firstMonthIsDec) {\n      acc.push({\n        x,\n        label: format(date, 'MMM'),\n      });\n      previousMonth = month;\n    }\n\n    return acc;\n  }, []);\n}\n\nfunction getGraphDataForYear(year, data, fullYear) {\n  const blocks = getBlocksForYear(year, data, fullYear);\n  const monthLabels = getMonthLabels(blocks, fullYear);\n  const totalCount = fullYear\n    ? getContributionCountForLastYear(data)\n    : getContributionCountForYear(data, year);\n\n  return {\n    year,\n    blocks,\n    monthLabels,\n    totalCount,\n  };\n}\n\n/**\n * Get the GitHub contributions for a specific user\n * @param options\n * @throws {Error} - Throws an error if the request fails or no data is available\n * @return {Promise<{blocks, monthLabels, totalCount}>} - A promise containing the data\n */\nexport async function getGitHubGraphData(options) {\n  const { years, fullYear, username } = options;\n  const data = await (await fetch(API_URL + username)).json();\n\n  if (!data.years.length) {\n    throw new Error('No data available');\n  }\n\n  return years.map(year => {\n    const isCurrentYear = isSameYear(parse(String(year)), new Date());\n\n    return getGraphDataForYear(year, data, isCurrentYear && fullYear);\n  });\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n// Import modules separately to reduce bundle size\nimport format from 'date-fns/format';\nimport getYear from 'date-fns/get_year';\n\nimport {\n  DEFAULT_THEME,\n  LINE_HEIGHT,\n  MIN_DISTANCE_MONTH_LABELS,\n  NAMESPACE,\n  TITLE_SCALE_FACTOR,\n} from '../utils/constants';\nimport { getGitHubGraphData } from '../services/contributions';\nimport { createCalendarTheme } from '../utils';\n\nclass GitHubCalendar extends Component {\n  state = {\n    graphs: null,\n    error: null,\n  };\n\n  componentDidMount() {\n    const { years, username, fullYear } = this.props;\n\n    getGitHubGraphData({\n      years,\n      username,\n      fullYear,\n    })\n      .then(graphs => this.setState({ graphs }))\n      .catch(error => this.setState({ error }));\n  }\n\n  getTheme() {\n    const { color, theme } = this.props;\n\n    if (typeof color === 'string') {\n      return createCalendarTheme(color);\n    }\n\n    return theme ? Object.assign({}, DEFAULT_THEME, theme) : DEFAULT_THEME;\n  }\n\n  // Unfortunately there is no support for CSS modules right now...\n  getStyles() {\n    const { fontSize, theme } = this.props;\n\n    return {\n      anchor: {\n        color: 'inherit',\n      },\n      chart: {\n        marginBottom: '1rem',\n      },\n      calendar: {\n        maxWidth: '100%',\n        height: 'auto',\n        marginBottom: '0.25rem',\n        backgroundColor: theme.background,\n        overflow: 'visible',\n      },\n      meta: {\n        fontSize,\n      },\n      title: {\n        marginBottom: '0.5rem',\n        paddingBottom: '0.25rem',\n        borderBottom: `2px solid ${this.getTheme().grade0}`,\n        fontSize: `${Math.round(fontSize * TITLE_SCALE_FACTOR)}px`,\n      },\n    };\n  }\n\n  getClassNameFor(object) {\n    return `${NAMESPACE}__${object}`;\n  }\n\n  getDimensions() {\n    const { blockMargin, blockSize, fontSize } = this.props;\n\n    const textHeight = Math.round(fontSize * LINE_HEIGHT);\n\n    // Since weeks start on Sunday, there is a good chance that the graph starts\n    // in the week before January 1st. Therefore, the calendar shows 53 weeks.\n    const width = (52 + 1) * (blockSize + blockMargin) - blockMargin;\n    const height = textHeight + (blockSize + blockMargin) * 7 - blockMargin;\n\n    return { width, height };\n  }\n\n  getTooltipMessage(day) {\n    const { dateFormat } = this.props;\n\n    return `<strong>${day.info.count} contributions</strong> on ${format(day.date, dateFormat)}`;\n  }\n\n  renderTitle() {\n    const { username } = this.props;\n\n    return (\n      <div className={this.getClassNameFor('title')} style={this.getStyles().title}>\n        <a\n          href={`https://github.com/${username}`}\n          title=\"GitHub profile\"\n          style={this.getStyles().anchor}\n        >\n          @{username} on GitHub\n        </a>\n      </div>\n    );\n  }\n\n  renderMonthLabels(monthLabels) {\n    const { blockSize, blockMargin, fontSize } = this.props;\n\n    // Remove the first month label if there's not enough space to the next one\n    // (end of previous month)\n    if (monthLabels[1].x - monthLabels[0].x <= MIN_DISTANCE_MONTH_LABELS) {\n      monthLabels.shift();\n    }\n\n    return monthLabels.map(month => (\n      <text\n        x={(blockSize + blockMargin) * month.x}\n        y={fontSize}\n        key={month.x}\n        style={{\n          fill: this.getTheme().text,\n          fontSize,\n        }}\n      >\n        {month.label}\n      </text>\n    ));\n  }\n\n  renderBlocks(blocks) {\n    const { blockSize, blockMargin, fontSize } = this.props;\n\n    const theme = this.getTheme();\n    const textHeight = Math.round(fontSize * LINE_HEIGHT);\n\n    return blocks\n      .map(week =>\n        week.map((day, y) => (\n          <rect\n            x=\"0\"\n            y={textHeight + (blockSize + blockMargin) * y}\n            width={blockSize}\n            height={blockSize}\n            fill={theme[`grade${day.info ? day.info.intensity : 0}`]}\n            data-tip={day.info && day.info.count ? this.getTooltipMessage(day) : null}\n            key={day.date}\n          />\n        )),\n      )\n      .map((week, x) => (\n        <g key={x} transform={`translate(${(blockSize + blockMargin) * x}, 0)`}>\n          {week}\n        </g>\n      ));\n  }\n\n  renderMeta(year, totalCount) {\n    const { fullYear } = this.props;\n    const isCurrentYear = getYear(new Date()) === year;\n\n    return (\n      <div className={this.getClassNameFor('meta')} style={this.getStyles().meta}>\n        {isCurrentYear && fullYear ? 'Last year' : year}\n        {' – '}\n        {isCurrentYear && !fullYear ? 'So far ' : null}\n        {totalCount} contributions\n      </div>\n    );\n  }\n\n  render() {\n    const { children, style } = this.props;\n    const { error, graphs } = this.state;\n\n    const styles = this.getStyles();\n\n    const { width, height } = this.getDimensions();\n\n    if (error) {\n      return <p>Error :(</p>;\n    }\n\n    if (!graphs) {\n      return <div className={this.getClassNameFor('loading')}>Loading …</div>;\n    }\n\n    return (\n      <article className={NAMESPACE} style={style}>\n        {this.renderTitle()}\n        {graphs.map((graph, i) => {\n          const { year, blocks, monthLabels, totalCount } = graph;\n\n          return (\n            <div\n              key={year}\n              className={this.getClassNameFor('chart')}\n              style={i < graphs.length - 1 ? styles.chart : null}\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width={width}\n                height={height}\n                viewBox={`0 0 ${width} ${height}`}\n                textRendering=\"optimizeLegibility\"\n                className={this.getClassNameFor('calendar')}\n                style={styles.calendar}\n              >\n                {this.renderMonthLabels(monthLabels)}\n                {this.renderBlocks(blocks)}\n              </svg>\n\n              {this.renderMeta(year, totalCount)}\n              {children}\n            </div>\n          );\n        })}\n      </article>\n    );\n  }\n}\n\nGitHubCalendar.propTypes = {\n  blockSize: PropTypes.number,\n  blockMargin: PropTypes.number,\n  color: PropTypes.string,\n  dateFormat: PropTypes.string,\n  fontSize: PropTypes.number,\n  fullYear: PropTypes.bool,\n  theme: PropTypes.objectOf(PropTypes.string),\n  tooltips: PropTypes.bool,\n  username: PropTypes.string.isRequired,\n  years: PropTypes.arrayOf(PropTypes.number),\n};\n\nGitHubCalendar.defaultProps = {\n  blockSize: 12,\n  blockMargin: 2,\n  color: null,\n  dateFormat: 'MMM D, YYYY',\n  fontSize: 14,\n  fullYear: true,\n  theme: DEFAULT_THEME,\n  tooltips: true,\n  years: [Number(format(new Date(), 'YYYY'))],\n};\n\nexport default GitHubCalendar;\n","import color from 'tinycolor2';\n\nimport { DEFAULT_THEME } from './constants';\n\n/**\n * Create a calendar color theme based on one color\n * @param {string} baseColor - The base color all lighter hues are calculated from\n * @param {string} textColor - Text color\n * @param {string} emptyCellColor\n * @param {string} background - Calendar background color. `transparent` by default\n * @throws {Error} - Throws an error if the color could not be parsed\n * @return {object} - The color theme object\n */\nexport function createCalendarTheme(\n  baseColor,\n  textColor = 'inherit',\n  emptyCellColor = color('white')\n    .darken(8)\n    .toHslString(),\n  background = 'transparent',\n) {\n  const base = color(baseColor);\n\n  if (!base.isValid()) {\n    return DEFAULT_THEME;\n  }\n\n  const text = color(textColor).isValid() ? color(textColor) : DEFAULT_THEME.text;\n\n  return {\n    background,\n    text,\n    grade4: base.setAlpha(0.92).toHslString(),\n    grade3: base.setAlpha(0.76).toHslString(),\n    grade2: base.setAlpha(0.6).toHslString(),\n    grade1: base.setAlpha(0.44).toHslString(),\n    grade0: emptyCellColor,\n  };\n}\n","import React from 'react';\n\nconst CodeBlock = ({ children, ...props }) => (\n  <pre className=\"code-block\" {...props}>\n    <code>{children}</code>\n  </pre>\n);\n\nexport default CodeBlock;\n","import React from 'react';\n\nconst svgStyle = {\n  position: 'absolute',\n  top: 0,\n  right: 0,\n  border: 0,\n  fill: '#fff',\n  color: '#151513',\n};\n\nconst ForkMe = () => (\n  <a\n    href=\"https://github.com/grubersjoe/react-github-calendar\"\n    className=\"github-corner\"\n    aria-label=\"View source on GitHub\"\n  >\n    <svg width=\"80\" height=\"80\" viewBox=\"0 0 250 250\" style={svgStyle} aria-hidden=\"true\">\n      <path d=\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\"></path>\n      <path\n        d=\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\"\n        fill=\"hsl(313, 78%, 20%)\"\n        style={{ transformOrigin: '130px 106px' }}\n        className=\"octo-arm\"\n      ></path>\n      <path\n        d=\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\"\n        fill=\"hsl(313, 78%, 20%)\"\n        className=\"octo-body\"\n      ></path>\n    </svg>\n  </a>\n);\n\nexport default ForkMe;\n","import React from 'react';\nimport ReactTooltip from 'react-tooltip';\nimport { format } from 'date-fns';\n\nimport 'typeface-public-sans';\nimport './Demo.css';\n\nimport GitHubCalendar from '../lib';\nimport CodeBlock from './CodeBlock';\nimport ForkMe from './ForkMe';\n\nconst username = 'grubersjoe';\n\nconst Demo = () => (\n  <div>\n    <header>\n      <ForkMe />\n      <div className=\"container\">\n        <h1>GitHub Contributions Calendar</h1>\n        <div>A React component to display a GitHub contributions graph</div>\n      </div>\n    </header>\n\n    <main className=\"container\">\n      <GitHubCalendar username={username} />\n\n      <section>\n        <h2>Installation</h2>\n        <CodeBlock style={{ marginTop: '0.5rem' }}>yarn install react-github-calendar</CodeBlock>\n        <p>Then in your code:</p>\n        <CodeBlock>\n          {`import GitHubCalendar from 'react-github-calendar';\n\n<GitHubCalendar username=\"grubersjoe\" />`}\n        </CodeBlock>\n      </section>\n\n      <section>\n        <h2>Component properties</h2>\n        <div style={{ overflowX: 'auto' }}>\n          <table>\n            <thead>\n              <tr>\n                <th>Property</th>\n                <th>Type</th>\n                <th>Default</th>\n                <th>Description</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>username</td>\n                <td>String</td>\n                <td>-</td>\n                <td>\n                  A GitHub username (<em>required, obviously</em>)\n                </td>\n              </tr>\n              <tr>\n                <td>blockMargin</td>\n                <td>Number</td>\n                <td>2</td>\n                <td>Margin between blocks</td>\n              </tr>\n              <tr>\n                <td>blockSize</td>\n                <td>Number</td>\n                <td>12</td>\n                <td>Size of one block (one day)</td>\n              </tr>\n              <tr>\n                <td>color</td>\n                <td>\n                  String|<a href=\"https://www.npmjs.com/package/color\">Color</a>\n                </td>\n                <td>null</td>\n                <td>Base color to compute graph intensity colors (see below)</td>\n              </tr>\n              <tr>\n                <td>dateFormat</td>\n                <td>String</td>\n                <td>'MMM D, YYYY'</td>\n                <td>\n                  A{' '}\n                  <code>\n                    <a href=\"https://date-fns.org/v1.29.0/docs/format\">date-fns/format</a>\n                  </code>{' '}\n                  compatible date string\n                </td>\n              </tr>\n              <tr>\n                <td>fontSize</td>\n                <td>Number</td>\n                <td>14</td>\n                <td>Base font size for text in chart. The title above (@user) is 25% larger.</td>\n              </tr>\n              <tr>\n                <td>fullYear</td>\n                <td>Boolean</td>\n                <td>true</td>\n                <td>\n                  Whether to show the whole last year starting now or this year only (starting in\n                  January).\n                </td>\n              </tr>\n              <tr>\n                <td>theme</td>\n                <td>Object</td>\n                <td>\n                  <em>GitHub theme</em>\n                </td>\n                <td>A object specifying all theme colors explicitly (see below)</td>\n              </tr>\n              <tr>\n                <td>tooltips</td>\n                <td>Boolean</td>\n                <td>true</td>\n                <td>\n                  Whether to add <code>data-tip</code> attributes to the blocks. Add{' '}\n                  <code>react-tooltip</code> and use it as child of this component. See below\n                  example.\n                </td>\n              </tr>\n              <tr>\n                <td>years</td>\n                <td>Number[]</td>\n                <td>[{format(new Date(), 'YYYY')}]</td>\n                <td>\n                  List of to be rendered years. Defaults to the current year. If no data is\n                  available the chart for this year will be ommited.\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </section>\n\n      <section>\n        <h2>Examples</h2>\n\n        <ol>\n          <li>\n            <a href=\"#show-contributions-of-last-year\">Show contributions of last year</a>\n          </li>\n          <li>\n            <a href=\"#display-this-year-only\">Display this year only</a>\n          </li>\n          <li>\n            <a href=\"#show-several-years\">Show several years</a>\n          </li>\n          <li>\n            <a href=\"#set-the-color-theme\">Set the color theme</a>\n          </li>\n          <li>\n            <a href=\"#add-tooltips\">Add tooltips</a>\n          </li>\n          <li>\n            <a href=\"#different-block-size\">Different block size</a>\n          </li>\n          <li>\n            <a href=\"#different-block-margin\">Different block margin</a>\n          </li>\n          <li>\n            <a href=\"#chart-font-size\">Chart font size</a>\n          </li>\n        </ol>\n\n        <hr />\n\n        <h3 id=\"show-contributions-of-last-year\">Show contributions of last year</h3>\n        <p>By default the last whole year is shown.</p>\n        <CodeBlock>{`<GitHubCalendar username=\"${username}\" />`}</CodeBlock>\n        <GitHubCalendar username={username} />\n\n        <hr />\n\n        <h3 id=\"display-this-year-only\">Display this year only</h3>\n        <p>\n          You might prefer the calendar for the current year to start in January (instead of showing\n          the last twelve months).\n        </p>\n        <CodeBlock>{`<GitHubCalendar username=\"${username}\" fullYear={false} />`}</CodeBlock>\n        <GitHubCalendar username={username} fullYear={false} />\n\n        <hr />\n\n        <h3 id=\"show-several-years\">Show several years</h3>\n        <p>To display multiple years, pass an array into the component:</p>\n        <CodeBlock>\n          {`<GitHubCalendar username=\"${username}\" years={[2018, 2017]} fullYear={false}/>`}\n        </CodeBlock>\n        <GitHubCalendar username={username} years={[2018, 2017]} fullYear={false} />\n\n        <hr />\n\n        <h3 id=\"set-the-color-theme\">Set the color theme</h3>\n        <p>\n          Either set a base color (any valid CSS color) to calculate the color hues for the\n          contribution intensity automatically or specify the different theme colors explicitly. If\n          a color is set, the theme will be ignored. If neither color or theme is set, the standard\n          GitHub colors will be used (as in these examples).\n        </p>\n        <CodeBlock>{`<GitHubCalendar username=\"${username}\" color=\"hsl(203, 82%, 33%)\" />`}</CodeBlock>\n        <GitHubCalendar username={username} color=\"hsl(203, 82%, 33%)\" />\n        <p>Set the colors explicitly like this:</p>\n        <CodeBlock>\n          {`const defaultTheme = {\n  background: 'transparent',\n  text: '#000',\n  grade4: '#196127',\n  grade3: '#239a3b',\n  grade2: '#7bc96f',\n  grade1: '#c6e48b',\n  grade0: '#ebedf0',\n};\n\n<GitHubCalendar username=\"${username}\" theme={defaultTheme} />`}\n        </CodeBlock>\n        <GitHubCalendar username={username} />\n\n        <hr />\n\n        <h3 id=\"add-tooltips\">Add tooltips</h3>\n        <p>\n          In order to show tooltips on hover, you need to add another dependency{' '}\n          <code>react-tooltip</code>. Add this component then as child of the calendar. Make sure to\n          enable the `html` property in the <code>ReactTooltip</code> component to display the\n          message correctly.\n        </p>\n        <CodeBlock>\n          {`<div>\n  <GitHubCalendar username=\"${username}\">\n    <ReactTooltip delayShow={50} html />\n  </GitHubCalendar>\n</div>`}\n        </CodeBlock>\n        <div>\n          <GitHubCalendar username={username}>\n            <ReactTooltip delayShow={50} html />\n          </GitHubCalendar>\n        </div>\n\n        <hr />\n\n        <h3 id=\"different-block-size\">Different block size</h3>\n        <p>The block size (12 per default) is configurable:</p>\n        <CodeBlock>{`<GitHubCalendar username=\"${username}\" blockSize={10} />`}</CodeBlock>\n        <GitHubCalendar username={username} blockSize={10} />\n\n        <hr />\n\n        <h3 id=\"different-block-margin\">Different block margin (and size)</h3>\n        <p>Analogously the block margin can be adjusted.</p>\n        <CodeBlock>{`<GitHubCalendar username=\"${username}\" blockSize={10} blockMargin={4} />`}</CodeBlock>\n        <GitHubCalendar username={username} blockSize={10} blockMargin={4} />\n\n        <hr />\n\n        <h3 id=\"chart-font-size\">Chart font size</h3>\n        <p>\n          Finally, there is a property to set the fontsize of the text inside the chart. This comes\n          in handy, if a large block size or margin is set. The default base font size is 14px.\n        </p>\n        <CodeBlock>{`<GitHubCalendar username=\"${username}\" fontSize={14} blockSize={12} />`}</CodeBlock>\n        <GitHubCalendar username={username} fontSize={14} blockSize={12} />\n      </section>\n    </main>\n  </div>\n);\n\nexport default Demo;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Demo from './Demo';\n\nReactDOM.render(<Demo />, document.getElementById('root'));\n"],"sourceRoot":""}